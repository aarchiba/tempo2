#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT([Tempo2],[2011.7],[george.hobbs@csiro.au])

AC_ARG_VAR([TEMPO2], [Default TEMPO2 installation directory])
AC_PREFIX_DEFAULT([${TEMPO2:-"/usr/local"}])

if test -n "${CXXFLAGS}"; then
	user_set_cxxflags=yes
fi

AC_CONFIG_AUX_DIR([config])
#AC_CONFIG_SRCDIR([Makefile.am])

# Enable large-file support
AC_SYS_LARGEFILE

# Determine the machine endian
AC_C_BIGENDIAN

# Checks for programs.
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_CC
AC_PROG_CPP
AM_PROG_CC_C_O
AC_PROG_F77
AC_PROG_F77_C_O
AC_F77_LIBRARY_LDFLAGS

if test -n "${CXXFLAGS}"; then
	user_set_cxxflags=yes
fi
AC_PROG_CXX
if test X$user_set_cxxflags != Xyes; then
	CXXFLAGS="-O2"
fi


AC_PROG_INSTALL
AC_PROG_LIBTOOL



if test $can_build_shared == no ; then
	AC_WARN("Libtool cannot build shared libraries - ")
fi

# look for third-party packages in various places (or not)
SWIN_LOCAL

AC_MSG_CHECKING([for \$TEMPO2])
if test -n "$TEMPO2" ; then
	TEMPO2_DIR=$TEMPO2
	AC_SUBST(TEMPO2_DIR)
	have_tempo2_dir=yes
else
	have_tempo2_dir=no
fi

AC_MSG_RESULT($have_tempo2_dir)

if test X$have_tempo2_dir != Xyes; then
	AC_WARN("You must set the $TEMPO2 variable before configuring.")
fi

AC_ARG_WITH([tempo2-plug-dir],
              AC_HELP_STRING([--with-tempo2-plug-dir=DIR],
                             [Specify DIR to install plugins]))


AC_MSG_CHECKING([for plugin install path])
if test -z "$with_tempo2_plug_dir" ; then
	TEMPO2_PLUG_INSTALL=$TEMPO2/plugins
else
	TEMPO2_PLUG_INSTALL=$with_tempo2_plug_dir
fi

AC_SUBST(TEMPO2_PLUG_INSTALL)
AC_MSG_RESULT($TEMPO2_PLUG_INSTALL)

MJK_FORTRAN_TEST

if test X$fortran_c_links != Xyes ; then
	AC_MSG_ERROR(Your C and F77 compilers do not cross link (\$CC=$CC \$F77=$F77))
fi

LT_LIB_DLLOAD

SWIN_LIB_PGPLOT
SWIN_LIB_FFTW
SWIN_LIB_CFITSIO

#GSL basic stuff
#Better tests are in AX_PATH_GSL
AC_CHECK_LIB([m],[cos])
AC_CHECK_LIB([gslcblas],[cblas_dgemm])
AC_CHECK_LIB([gsl],[gsl_blas_dgemm],have_gsl=yes, have_gsl=no)

AC_MSG_CHECKING([for GSL])
AC_MSG_RESULT($have_gsl)

AM_CONDITIONAL(HAVE_GSL, [test x"$have_gsl" = xyes])

AC_MSG_CHECKING([for LOGIN_ARCH variable])
if test -n "$LOGIN_ARCH" ; then
	t2arch=$LOGIN_ARCH
	else if test -n "$OSTYPE" ; then
		AC_MSG_RESULT(no)
		AC_MSG_CHECKING([for OSTYPE variable])
		t2arch=$OSTYPE
		else if test -n $OSTYPE ; then
		AC_MSG_RESULT(no)
		AC_MSG_CHECKING([for uname])
			t2arch=`uname`
		fi
	fi
fi


AC_MSG_RESULT($t2arch)

AC_DEFINE_UNQUOTED([TEMPO2_ARCH], "$t2arch",["Tempo2 ARCH variable"])
T2ARCH=$t2arch

AC_SUBST(T2ARCH)


AM_INIT_AUTOMAKE([foreign subdir-objects])

AM_CONFIG_HEADER([config.h])
AC_CONFIG_FILES([Makefile plugin/Makefile sofa/Makefile unsupported_plugins/Makefile])

AC_OUTPUT

AC_MSG_NOTICE(Fortran compiler is $F77 $FFLAGS)
AC_MSG_NOTICE(C compiler is $CC $CFLAGS)
AC_MSG_NOTICE(C++ compiler is $CXX $CXXFLAGS)
AC_MSG_NOTICE(Global linking flags are $LDFLAGS)


# User warnings
if test X$have_pgplot != Xyes; then
	AC_MSG_NOTICE(Plugins: PGPLOT was not detected - plugins requiring pgplot will not be compiled)
else
	AC_MSG_NOTICE(PGPLOT compile flags are "$PGPLOT_CFLAGS")
	AC_MSG_NOTICE(PGPLOT linking flags are "$PGPLOT_LIBS")
fi

#
# This message is disabled whilst there are no GSL plugins.
#
#if test X$have_gsl != Xyes; then
#	AC_MSG_NOTICE(NOTE: GNU Scientific Library was not found, plugins requiring GSL will not be compiled)
#fi

if test X$have_fftw3 != Xyes; then
	AC_MSG_NOTICE(Plugins: FFTW3 was not found - plugins requiring fftw will not be compiled)
fi
if test X$have_cfitsio != Xyes; then
	AC_MSG_NOTICE(Plugins: cfitsio was not found - plugins requiring cfitsio will not be compiled)
fi


if test $can_build_shared == no ; then
	echo ""
	AC_WARN("Libtool cannot build shared libraries - no plugins can be built!")
	echo ""
else
	echo ""
	echo "NOTICE: plugins now built with 'make plugins && make plugins-install'"
fi





